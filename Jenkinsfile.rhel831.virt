pipeline {
    agent {
        node {
            label 'vm-rhel-8-3-1'
        }
    }
    stages {
        stage("ensure cloud-init has finished") {
            steps {
                sh label: 'run shell sceipt', script: """
                    while true; do
                        test -f /var/lib/cloud/instance/boot-finished && break
                    done
                """
            }
        }
        stage("x86_64: build, install and upgrade rhel edge ostree commit") {
            steps {
                script {
                    env.COMPOSE_ID = sh(returnStdout: true, script: 'echo $CI_MESSAGE | /usr/bin/jq -r ".compose_id"').trim()
                    currentBuild.displayName = "${env.BUILD_NUMBER}-${env.COMPOSE_ID}"
                }
                sh label: 'run ansible playbook', script: """
                    printenv
                    id
                    ./rhel-edge-virt-test.sh
                """
            }
        }
    }
    post {
        always {
            archiveArtifacts allowEmptyArchive: true, artifacts: 'osbuild-*.log'
            archiveArtifacts allowEmptyArchive: true, artifacts: 'osbuild-*.json'
        }
    }
    options {
        timestamps()
        timeout(time: 3, unit: 'HOURS')
    }
}

